name: 'Atlantis'

on:
  # Issue comments target default branch so workflow definition in main (rather than PR) is used
  issue_comment:
    types:
      - created

permissions:
  checks: write
  contents: write
  issues: write
  pull-requests: write
  statuses: write

jobs:

  atlantis:
    name: Atlantis
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis
    container:
      image: ghcr.io/runatlantis/atlantis:v0.23.2-debian
      env:
        ATLANTIS_DATA_DIR: /atlantis-data
        ATLANTIS_GH_USER: ${{ github.actor }}
        ATLANTIS_GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        ATLANTIS_LOCKING_DB_TYPE: redis
        ATLANTIS_REDIS_HOST: redis
        ATLANTIS_REPO_ALLOWLIST: github.com/${{ github.repository }}
        ATLANTIS_DISABLE_AUTOPLAN: true
      options: --user root
      volumes:
        - ${{ github.workspace }}/atlantis-data:/atlantis-data
    steps:
      - name: Cache Atlantis data
        id: cache-atlantis-data
        uses: actions/cache@v3
        with:
          path: /atlantis-data
          key: atlantis-data-${{ github.event.issue.number }}

      - name: Run Atlantis
        timeout-minutes: 1
        run: |
          # Start server in background
          atlantis server &
          atlantis_pid=$!
          
          # Wait for Atlantis to start
          until curl --output /dev/null --silent --fail http://localhost:4141/healthz; do
            sleep 5
          done
          
          # Relay event
          curl --silent --request POST \
            --header 'Content-Type: application/json' \
            --header 'X-GitHub-Event: ${{ github.event_name }}' \
            --header 'X-GitHub-Delivery: ${{ github.run_id }}' \
            --data '${{ toJson(github.event) }}' \
            http://localhost:4141/events
          
          # Wait for Atlantis to run
          sleep 5
          until curl --silent http://localhost:4141/status | grep '"in_progress_operations": 0'; do
            sleep 5
          done
          
          # Wait for Atlantis to exit gracefully (GitHub Actions sends SIGKILL instead of SIGTERM at the end)
          kill $atlantis_pid
          wait $atlantis_pid
